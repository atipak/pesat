<?xml version="1.0" encoding="utf-8"?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/patik/Diplomka/dp_ws/src/pesat_resources/urdf/mav_generic_odometry_sensor.gazebo | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!--
  Copyright 2015 Fadri Furrer, ASL, ETH Zurich, Switzerland
  Copyright 2015 Michael Burri, ASL, ETH Zurich, Switzerland
  Copyright 2015 Mina Kamel, ASL, ETH Zurich, Switzerland
  Copyright 2015 Janosch Nikolic, ASL, ETH Zurich, Switzerland
  Copyright 2015 Markus Achtelik, ASL, ETH Zurich, Switzerland

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<robot name="bebop2" xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- =============================================================== -->
  <!-- ==================== ROS INTERFACE MACRO ====================== -->
  <!-- =============================================================== -->
  <!-- <xacro:macro 
  		name="ros_interface_plugin_macro"
  		params="namespace">
    <gazebo>
      <plugin name="ros_interface_plugin" filename="librotors_gazebo_ros_interface_plugin.so">
        <robotNamespace>${namespace}</robotNamespace>
      </plugin>
    </gazebo>
  </xacro:macro>-->
  <link name="bebop2/base_link"/>
  <joint name="bebop2/base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="bebop2/base_link"/>
    <child link="bebop2/base_link_inertia"/>
  </joint>
  <link name="bebop2/base_link_inertia">
    <inertial>
      <mass value="0.503"/>
      <!-- [kg] -->
      <origin xyz="0 0 0"/>
      <inertia ixx="1.805e-3" ixy="-8.619e-7" ixz="1.555e-5" iyy="1.764e-3" iyz="3.595e-7" izz="3.328e-3"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rotors_description/meshes/bebop2.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.316618 0.316618 0.089582"/>
        <!-- [m] [m] [m] -->
      </geometry>
    </collision>
  </link>
  <!-- attach multirotor_base_plugin to the base_link -->
  <gazebo>
    <plugin filename="librotors_gazebo_multirotor_base_plugin.so" name="multirotor_base_plugin">
      <robotNamespace>bebop2</robotNamespace>
      <linkName>bebop2/base_link</linkName>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <joint name="bebop2/rotor_0_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.08456 -0.11435 -0.00501"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="bebop2/base_link"/>
    <child link="bebop2/rotor_0"/>
  </joint>
  <link name="bebop2/rotor_0">
    <inertial>
      <mass value="0.001"/>
      <!-- [kg] -->
      <inertia ixx="1.94999922e-07" ixy="0.0" ixz="0.0" iyy="8.340829997e-06" iyz="0.0" izz="8.520829925e-06"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="package://rotors_description/meshes/propeller_fr.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.1"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="bebop2_front_right_motor_model">
      <robotNamespace>bebop2</robotNamespace>
      <jointName>bebop2/rotor_0_joint</jointName>
      <linkName>bebop2/rotor_0</linkName>
      <turningDirection>ccw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>838</maxRotVelocity>
      <motorConstant>8.54858e-06</motorConstant>
      <momentConstant>0.016</momentConstant>
      <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>0</motorNumber>
      <rotorDragCoefficient>8.06428e-05</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/0</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <gazebo reference="bebop2/rotor_0">
    <material>Gazebo/</material>
  </gazebo>
  <joint name="bebop2/rotor_1_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.09035 0.11452 -0.00501"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="bebop2/base_link"/>
    <child link="bebop2/rotor_1"/>
  </joint>
  <link name="bebop2/rotor_1">
    <inertial>
      <mass value="0.001"/>
      <!-- [kg] -->
      <inertia ixx="1.94999922e-07" ixy="0.0" ixz="0.0" iyy="8.340829997e-06" iyz="0.0" izz="8.520829925e-06"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="package://rotors_description/meshes/propeller_rl.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.1"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="bebop2_back_left_motor_model">
      <robotNamespace>bebop2</robotNamespace>
      <jointName>bebop2/rotor_1_joint</jointName>
      <linkName>bebop2/rotor_1</linkName>
      <turningDirection>ccw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>838</maxRotVelocity>
      <motorConstant>8.54858e-06</motorConstant>
      <momentConstant>0.016</momentConstant>
      <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>1</motorNumber>
      <rotorDragCoefficient>8.06428e-05</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/1</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <gazebo reference="bebop2/rotor_1">
    <material>Gazebo/</material>
  </gazebo>
  <joint name="bebop2/rotor_2_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.08456 0.11463 -0.00501"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="bebop2/base_link"/>
    <child link="bebop2/rotor_2"/>
  </joint>
  <link name="bebop2/rotor_2">
    <inertial>
      <mass value="0.001"/>
      <!-- [kg] -->
      <inertia ixx="1.94999922e-07" ixy="0.0" ixz="0.0" iyy="8.340829997e-06" iyz="0.0" izz="8.520829925e-06"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="package://rotors_description/meshes/propeller_fl.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.1"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="bebop2_front_left_motor_model">
      <robotNamespace>bebop2</robotNamespace>
      <jointName>bebop2/rotor_2_joint</jointName>
      <linkName>bebop2/rotor_2</linkName>
      <turningDirection>cw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>838</maxRotVelocity>
      <motorConstant>8.54858e-06</motorConstant>
      <momentConstant>0.016</momentConstant>
      <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>2</motorNumber>
      <rotorDragCoefficient>8.06428e-05</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/2</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <gazebo reference="bebop2/rotor_2">
    <material>Gazebo/</material>
  </gazebo>
  <joint name="bebop2/rotor_3_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.09035 -0.11423 -0.00501"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="bebop2/base_link"/>
    <child link="bebop2/rotor_3"/>
  </joint>
  <link name="bebop2/rotor_3">
    <inertial>
      <mass value="0.001"/>
      <!-- [kg] -->
      <inertia ixx="1.94999922e-07" ixy="0.0" ixz="0.0" iyy="8.340829997e-06" iyz="0.0" izz="8.520829925e-06"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="package://rotors_description/meshes/propeller_rr.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.1"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="bebop2_back_right_motor_model">
      <robotNamespace>bebop2</robotNamespace>
      <jointName>bebop2/rotor_3_joint</jointName>
      <linkName>bebop2/rotor_3</linkName>
      <turningDirection>cw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>838</maxRotVelocity>
      <motorConstant>8.54858e-06</motorConstant>
      <momentConstant>0.016</momentConstant>
      <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>3</motorNumber>
      <rotorDragCoefficient>8.06428e-05</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/3</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <gazebo reference="bebop2/rotor_3">
    <material>Gazebo/</material>
  </gazebo>
  <link name="bebop2/camera_rotator_base_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
      <material name="red"/>
    </visual>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <link name="bebop2/camera_base_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 1.5707963268 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
      <material name="red"/>
    </visual>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <joint name="bebop2/camera_rotator_base_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0.1 0 0"/>
    <parent link="bebop2/base_link"/>
    <child link="bebop2/camera_rotator_base_link"/>
    <axis xyz="0 1 0"/>
    <limit effort="0.02" lower="-0.523598775598" upper="0.523598775598" velocity="0.02"/>
  </joint>
  <joint name="bebop2/camera_base_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="bebop2/camera_rotator_base_link"/>
    <child link="bebop2/camera_base_link"/>
    <axis xyz="0 0 1"/>
    <limit effort="0.02" lower="-0.523598775598" upper="0.523598775598" velocity="0.02"/>
  </joint>
  <link name="bebop2/camera_base_optical_link"/>
  <joint name="bebop2/camera_base_optical_joint" type="fixed">
    <origin rpy="-1.5707963268 0 -1.5707963268" xyz="0 0 0"/>
    <parent link="bebop2/camera_base_link"/>
    <child link="bebop2/camera_base_optical_link"/>
  </joint>
  <gazebo reference="bebop2/camera_base_link">
    <sensor name="bebop2_camera_base" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.7</horizontal_fov>
        <image>
          <width>856</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>50</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="bebop2_camera_base_controller">
        <robotNamespace>bebop2</robotNamespace>
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>camera_base</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_base_link</frameName>
        <hackBaseline>0.0</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <!-- transmission -->
  <transmission name="base_to_rotator">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="motor_vertical">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="bebop2/camera_rotator_base_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <transmission name="rotator_to_camera_base">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="motor_horizontal">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="bebop2/camera_base_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <!-- Sonar sensor link -->
  <link name="bebop2/sonar_sensor_base_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
      <material name="red"/>
    </visual>
    <inertial>
      <mass value="1e-05"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <!-- Sonar sensor joint -->
  <joint name="bebop2/sonar_sensor_base_joint" type="revolute">
    <origin rpy="0 1.5707963268 0" xyz="0.1 0 0"/>
    <parent link="bebop2/base_link"/>
    <child link="bebop2/sonar_sensor_base_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <!-- Sonar sensor gazebo -->
  <gazebo reference="bebop2/sonar_sensor_base_link">
    <sensor name="sonar" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>True</visualize>
      <update_rate>50.0</update_rate>
      <ray>
        <scan>
          <horizontal>
            <!-- default angle 10 -->
            <samples>10</samples>
            <!-- default angle 1 -->
            <resolution>1.0</resolution>
            <!-- default angle 0.14835 -->
            <min_angle>-0.14835</min_angle>
            <max_angle>0.14835</max_angle>
          </horizontal>
          <vertical>
            <samples>10</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.14835</min_angle>
            <max_angle>0.14835</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.06</min>
          <max>50.0</max>
          <resolution>0.02</resolution>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
        <!-- default 0.005 -->
        <gaussianNoise>0.005</gaussianNoise>
        <alwaysOn>true</alwaysOn>
        <updateRate>50.0</updateRate>
        <topicName>sensors/sonar</topicName>
        <frameName>bebop2/sonar_sensor_base_link</frameName>
        <radiation>ultrasound</radiation>
        <fov>0.2967</fov>
        <!-- 0.2967 -->
      </plugin>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin filename="librotors_gazebo_controller_interface.so" name="controller_interface">
      <robotNamespace>bebop2</robotNamespace>
      <commandAttitudeThrustSubTopic>command/attitude</commandAttitudeThrustSubTopic>
      <commandRateThrustSubTopic>command/rate</commandRateThrustSubTopic>
      <commandMotorSpeedSubTopic>command/motor_speed</commandMotorSpeedSubTopic>
      <imuSubTopic>imu</imuSubTopic>
      <motorSpeedCommandPubTopic>gazebo/command/motor_speed</motorSpeedCommandPubTopic>
    </plugin>
  </gazebo>
  <!-- IMU link -->
  <link name="bebop2/imu_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="0.015"/>
      <!-- [kg] -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
  </link>
  <!-- IMU joint -->
  <joint name="bebop2/imu_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="bebop2/base_link"/>
    <child link="bebop2/imu_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <gazebo>
    <plugin filename="librotors_gazebo_imu_plugin.so" name="rotors_gazebo_imu_plugin">
      <!-- A good description of the IMU parameters can be found in the kalibr documentation:
           https://github.com/ethz-asl/kalibr/wiki/IMU-Noise-Model-and-Intrinsics -->
      <robotNamespace>bebop2</robotNamespace>
      <!-- (string, required): ros namespace in which the messages are published -->
      <linkName>bebop2/imu_link</linkName>
      <!-- (string, required): name of the body which holds the IMU sensor -->
      <imuTopic>imu</imuTopic>
      <!-- (string): name of the sensor output topic and prefix of service names (defaults to imu) -->
      <gyroscopeNoiseDensity>0.0003394</gyroscopeNoiseDensity>
      <!-- Gyroscope noise density (two-sided spectrum) [rad/s/sqrt(Hz)] -->
      <gyroscopeRandomWalk>3.8785e-05</gyroscopeRandomWalk>
      <!-- Gyroscope bias random walk [rad/s/s/sqrt(Hz)] -->
      <gyroscopeBiasCorrelationTime>1000.0</gyroscopeBiasCorrelationTime>
      <!-- Gyroscope bias correlation time constant [s] -->
      <gyroscopeTurnOnBiasSigma>0.0087</gyroscopeTurnOnBiasSigma>
      <!-- Gyroscope turn on bias standard deviation [rad/s] -->
      <accelerometerNoiseDensity>0.004</accelerometerNoiseDensity>
      <!-- Accelerometer noise density (two-sided spectrum) [m/s^2/sqrt(Hz)] -->
      <accelerometerRandomWalk>0.006</accelerometerRandomWalk>
      <!-- Accelerometer bias random walk. [m/s^2/s/sqrt(Hz)] -->
      <accelerometerBiasCorrelationTime>300.0</accelerometerBiasCorrelationTime>
      <!-- Accelerometer bias correlation time constant [s] -->
      <accelerometerTurnOnBiasSigma>0.196</accelerometerTurnOnBiasSigma>
      <!-- Accelerometer turn on bias standard deviation [m/s^2] -->
    </plugin>
  </gazebo>
  <!-- GPS link -->
  <link name="bebop2/gps_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="0.015"/>
      <!-- [kg] -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
  </link>
  <!-- GPS joint -->
  <joint name="bebop2/gps_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="bebop2/base_link"/>
    <child link="bebop2/gps_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <gazebo reference="bebop2/gps_link">
    <sensor name="bebop2_gps" type="gps">
      <pose>0 0 0 0 0 0</pose>
      <visualize>0</visualize>
      <always_on>1</always_on>
      <update_rate>5</update_rate>
      <gps>
        <position_sensing>
          <horizontal>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>3.0</stddev>
              <bias_mean>0.0</bias_mean>
              <bias_stddev>0.0</bias_stddev>
            </noise>
          </horizontal>
          <vertical>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>6.0</stddev>
              <bias_mean>0.0</bias_mean>
              <bias_stddev>0.0</bias_stddev>
            </noise>
          </vertical>
        </position_sensing>
        <velocity_sensing>
          <horizontal>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.1</stddev>
              <bias_mean>0.0</bias_mean>
              <bias_stddev>0.0</bias_stddev>
            </noise>
          </horizontal>
          <vertical>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.1</stddev>
              <bias_mean>0.0</bias_mean>
              <bias_stddev>0.0</bias_stddev>
            </noise>
          </vertical>
        </velocity_sensing>
      </gps>
      <plugin filename="librotors_gazebo_gps_plugin.so" name="rotors_gazebo_gps_plugin">
        <robotNamespace>bebop2</robotNamespace>
        <!-- (string, required): ros namespace in which the messages are published -->
        <linkName>bebop2/gps_link</linkName>
        <!-- (string, required): name of the body which holds the GPS sensor -->
        <gpsTopic>gps</gpsTopic>
        <!-- (string): name of the sensor output topic and prefix of service names (defaults to 'gps') -->
        <groundSpeedTopic>ground_speed</groundSpeedTopic>
        <!-- (string): name of the ground speed output topic (defaults to 'ground_speed') -->
        <horPosStdDev>3.0</horPosStdDev>
        <!-- standard deviation for horizontal position noise [m] -->
        <verPosStdDev>6.0</verPosStdDev>
        <!-- standard deviation for vertical position noise [m] -->
        <horVelStdDev>0.1</horVelStdDev>
        <!-- standard deviation for horizontal speed noise [m/s] -->
        <verVelStdDev>0.1</verVelStdDev>
        <!-- standard deviation for vertical speed noise [m/s] -->
      </plugin>
    </sensor>
  </gazebo>
  <!-- IMU link -->
  <link name="bebop2/imugt_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="1e-05"/>
      <!-- [kg] -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
  </link>
  <!-- IMU joint -->
  <joint name="bebop2/imugt_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="bebop2/base_link"/>
    <child link="bebop2/imugt_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <gazebo>
    <plugin filename="librotors_gazebo_imu_plugin.so" name="rotors_gazebo_imugt_plugin">
      <!-- A good description of the IMU parameters can be found in the kalibr documentation:
           https://github.com/ethz-asl/kalibr/wiki/IMU-Noise-Model-and-Intrinsics -->
      <robotNamespace>bebop2</robotNamespace>
      <!-- (string, required): ros namespace in which the messages are published -->
      <linkName>bebop2/imugt_link</linkName>
      <!-- (string, required): name of the body which holds the IMU sensor -->
      <imuTopic>ground_truth/imu</imuTopic>
      <!-- (string): name of the sensor output topic and prefix of service names (defaults to imu) -->
      <gyroscopeNoiseDensity>0.0</gyroscopeNoiseDensity>
      <!-- Gyroscope noise density (two-sided spectrum) [rad/s/sqrt(Hz)] -->
      <gyroscopeRandomWalk>0.0</gyroscopeRandomWalk>
      <!-- Gyroscope bias random walk [rad/s/s/sqrt(Hz)] -->
      <gyroscopeBiasCorrelationTime>1000.0</gyroscopeBiasCorrelationTime>
      <!-- Gyroscope bias correlation time constant [s] -->
      <gyroscopeTurnOnBiasSigma>0.0</gyroscopeTurnOnBiasSigma>
      <!-- Gyroscope turn on bias standard deviation [rad/s] -->
      <accelerometerNoiseDensity>0.0</accelerometerNoiseDensity>
      <!-- Accelerometer noise density (two-sided spectrum) [m/s^2/sqrt(Hz)] -->
      <accelerometerRandomWalk>0.0</accelerometerRandomWalk>
      <!-- Accelerometer bias random walk. [m/s^2/s/sqrt(Hz)] -->
      <accelerometerBiasCorrelationTime>300.0</accelerometerBiasCorrelationTime>
      <!-- Accelerometer bias correlation time constant [s] -->
      <accelerometerTurnOnBiasSigma>0.0</accelerometerTurnOnBiasSigma>
      <!-- Accelerometer turn on bias standard deviation [m/s^2] -->
    </plugin>
  </gazebo>
  <!-- odometry link -->
  <link name="bebop2/odometry_sensorgt_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="1e-05"/>
      <!-- [kg] -->
    </inertial>
  </link>
  <!-- odometry joint -->
  <joint name="bebop2/odometry_sensorgt_joint" type="revolute">
    <parent link="bebop2/base_link"/>
    <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
    <child link="bebop2/odometry_sensorgt_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <gazebo>
    <plugin filename="librotors_gazebo_odometry_plugin.so" name="odometry_sensorgt">
      <linkName>bebop2/odometry_sensorgt_link</linkName>
      <robotNamespace>bebop2</robotNamespace>
      <poseTopic>ground_truth/pose</poseTopic>
      <poseWithCovarianceTopic>ground_truth/pose_with_covariance</poseWithCovarianceTopic>
      <positionTopic>ground_truth/position</positionTopic>
      <transformTopic>ground_truth/transform</transformTopic>
      <odometryTopic>ground_truth/odometry</odometryTopic>
      <parentFrameId>world</parentFrameId>
      <!-- Use the scoped link name here. e.g. Model::link. -->
      <childFrameId>bebop2/base_link</childFrameId>
      <measurementDivisor>1</measurementDivisor>
      <!-- only every (seq % measurementDivisor) == 0 measurement is published [int] -->
      <measurementDelay>0</measurementDelay>
      <!-- time that measurement gets held back before it's published in [simulation cycles (int)] -->
      <unknownDelay>0.0</unknownDelay>
      <!-- additional delay, that just gets added to the timestamp [s] -->
      <noiseNormalPosition>0 0 0</noiseNormalPosition>
      <!-- standard deviation of additive white gaussian noise [m] -->
      <noiseNormalQuaternion>0 0 0</noiseNormalQuaternion>
      <!-- standard deviation white gaussian noise [rad]: q_m = q*quaternionFromSmallAngleApproximation(noiseNormalQ) -->
      <noiseNormalLinearVelocity>0 0 0</noiseNormalLinearVelocity>
      <!-- standard deviation of additive white gaussian noise [m/s] -->
      <noiseNormalAngularVelocity>0 0 0</noiseNormalAngularVelocity>
      <!-- standard deviation of additive white gaussian noise [rad/s] -->
      <noiseUniformPosition>0 0 0</noiseUniformPosition>
      <!-- symmetric bounds of uniform noise [m] -->
      <noiseUniformQuaternion>0 0 0</noiseUniformQuaternion>
      <!-- symmetric bounds of uniform noise [rad], computation see above -->
      <noiseUniformLinearVelocity>0 0 0</noiseUniformLinearVelocity>
      <!-- symmetric bounds of uniform noise [m/s] -->
      <noiseUniformAngularVelocity>0 0 0</noiseUniformAngularVelocity>
    </plugin>
  </gazebo>
  <!-- odometry link -->
  <link name="bebop2/odometry_sensor1_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="1e-05"/>
      <!-- [kg] -->
    </inertial>
  </link>
  <!-- odometry joint -->
  <joint name="bebop2/odometry_sensor1_joint" type="revolute">
    <parent link="bebop2/base_link"/>
    <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
    <child link="bebop2/odometry_sensor1_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <gazebo>
    <plugin filename="librotors_gazebo_odometry_plugin.so" name="odometry_sensor1">
      <linkName>bebop2/odometry_sensor1_link</linkName>
      <robotNamespace>bebop2</robotNamespace>
      <poseTopic>odometry_sensor1/pose</poseTopic>
      <poseWithCovarianceTopic>odometry_sensor1/pose_with_covariance</poseWithCovarianceTopic>
      <positionTopic>odometry_sensor1/position</positionTopic>
      <transformTopic>odometry_sensor1/transform</transformTopic>
      <odometryTopic>odometry_sensor1/odometry</odometryTopic>
      <parentFrameId>world</parentFrameId>
      <!-- Use the scoped link name here. e.g. Model::link. -->
      <childFrameId>bebop2/odometry_sensor1</childFrameId>
      <measurementDivisor>1</measurementDivisor>
      <!-- only every (seq % measurementDivisor) == 0 measurement is published [int] -->
      <measurementDelay>0</measurementDelay>
      <!-- time that measurement gets held back before it's published in [simulation cycles (int)] -->
      <unknownDelay>0.0</unknownDelay>
      <!-- additional delay, that just gets added to the timestamp [s] -->
      <noiseNormalPosition>0 0 0</noiseNormalPosition>
      <!-- standard deviation of additive white gaussian noise [m] -->
      <noiseNormalQuaternion>0 0 0</noiseNormalQuaternion>
      <!-- standard deviation white gaussian noise [rad]: q_m = q*quaternionFromSmallAngleApproximation(noiseNormalQ) -->
      <noiseNormalLinearVelocity>0 0 0</noiseNormalLinearVelocity>
      <!-- standard deviation of additive white gaussian noise [m/s] -->
      <noiseNormalAngularVelocity>0 0 0</noiseNormalAngularVelocity>
      <!-- standard deviation of additive white gaussian noise [rad/s] -->
      <noiseUniformPosition>0 0 0</noiseUniformPosition>
      <!-- symmetric bounds of uniform noise [m] -->
      <noiseUniformQuaternion>0 0 0</noiseUniformQuaternion>
      <!-- symmetric bounds of uniform noise [rad], computation see above -->
      <noiseUniformLinearVelocity>0 0 0</noiseUniformLinearVelocity>
      <!-- symmetric bounds of uniform noise [m/s] -->
      <noiseUniformAngularVelocity>0 0 0</noiseUniformAngularVelocity>
    </plugin>
  </gazebo>
  <!--                GAZEBO RELATED PART                             -->
  <!-- ROS Control plugin for Gazebo -->
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>/bebop2</robotNamespace>
    </plugin>
  </gazebo>
</robot>
