<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<launch>
    <!-- central system section-->
	<arg name="central_system" default="false" />
	<arg name="standalone_pid_controllers" default="true" />
	<arg name="drone_moveit" default="true" />

	<!-- target section-->
	<arg name="target" default="true" />
	<arg name="targetloc" default="true" />

	<!-- tracking section-->
	<arg name="tracking" default="false" />

	<!-- dynamic avoidance section-->
	<arg name="dynamic_avoidance" default="false" />

	<!-- planning section-->
	<arg name="planning" default="false" />
	<arg name="cctv" default="false" />

	<!-- real machine section-->
	<arg name="pid_controller" default="false" />
	<arg name="extra_localization" default="false" />
	<arg name="slam" default="false" />
	<!-- tracking: pids, target, targetloc, drone_moveit, central_system, in central system tracking_test method, change world to basic -->
	<!-- avoidance: pids, dynamic avoidance, target, central_system, in central system avoidance test, change world to avoidance -->

	<!-- Gazebo -->
	<include file="$(find velocity_controller)/launch/bebop_cmd_vel.launch">
		<arg name="extra_localization" value="$(arg extra_localization)" />
		<!--<arg name="world_name" value="avoidance"/>-->
		<arg name="world_name" value="basic"/>
		<!--<arg name="world_name" value="box_world"/>-->
		<arg name="world_path" value="$(find pesat_resources)/worlds"/>
	</include>

	<!-- Robot localization package -->
	<include file="$(find central_system)/launch/localization.launch" if="$(arg extra_localization)"/>

    <!-- Central system -->
	<include file="$(find central_system)/launch/central_system.launch" if="$(arg central_system)"/>

	<group ns="/bebop2">
        <!-- Moveit -->
	    <include file="$(find central_system)/launch/drone_moveit.launch" if="$(arg drone_moveit)"/>

	    <!-- Central tracking system -->
        <include file="$(find centracksys)/launch/tracksys.launch" if="$(arg tracking)">
	    </include>
	</group>

	<!-- SLAM -->
	<include file="$(find central_system)/launch/orb_slam2_gazebo_mono.launch" if="$(arg slam)">
	    <arg name="namespace" value="bebop2" />
	</include>

	<!-- Target localization -->
	<include file="$(find target_localization)/launch/target_loc.launch" if="$(arg targetloc)">
		<!--<arg name="image_topic" value="/bebop2/camera_base/image_raw"/>-->
	</include>

	<!-- Target ball -->
	<group if="$(arg target)">
        <include file="$(find target_ball)/launch/target.launch" />
        <include file="$(find central_system)/launch/target_moveit.launch" />
    </group>

	<!-- Dynamic avoidance algorithm and system -->
	<group if="$(arg dynamic_avoidance)">
        <!-- Dynamic avoidance algorithm -->
        <include file="$(find dynamic_avoidance)/launch/dynamic_avoidance.launch">
        </include>

        <!-- Dronet -->
        <include file="$(find central_system)/launch/full_perception_launch.launch">
            <arg name="bebop_launch" value="false" />
            <arg name="namespace" value="bebop2" />
        </include>
        <include file="$(find central_system)/launch/deep_navigation.launch">
            <arg name="namespace" value="bebop2" />
        </include>
    </group>

	<!-- Search planner for drone -->
    <include file="$(find drone_planning)/launch/drone_planner.launch" if="$(arg planning)">
	</include>

	<!-- CCTV cameras for filling database of drone, support for searching -->
    <include file="$(find cctv_system)/launch/cctv_system.launch" if="$(arg cctv)">
	</include>

	<!-- 6 DOF PID for drone -->
    <include file="$(find position_pid)/launch/bebop2_position_controllers.launch" if="$(arg pid_controller)">
	</include>

	<!-- 6x standalone PIDs for drone -->
    <include file="$(find central_system)/launch/standalone_pid_controllers.launch" if="$(arg standalone_pid_controllers)">
	</include>
</launch>
